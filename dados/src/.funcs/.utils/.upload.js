const axios = require("axios");

const getFileTypeFromBuffer = buffer => ({ 'ffd8ff': { ext: 'jpg', mime: 'image/jpeg' }, '000001ba': { ext: 'mpg', mime: 'video/mpeg' }, '000001b3': { ext: 'mpg', mime: 'video/mpeg' }, '00000018': { ext: 'mp4', mime: 'video/mp4' }, '00000020': { ext: 'mp4', mime: 'video/mp4' }, '52494646': (() => { const riffType = buffer.toString('hex', 8, 12); return { '57415645': { ext: 'wav', mime: 'audio/wav' }, '41564920': { ext: 'avi', mime: 'video/x-msvideo' }, '57454250': { ext: 'webp', mime: 'image/webp' } }[riffType] || { ext: 'unknown', mime: 'application/octet-stream' }; })(), '504b0304': (() => { const zipType = buffer.toString('hex', 30, 34); return { '6d6c20': { ext: 'docx', mime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' }, '786c20': { ext: 'xlsx', mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' }, '707020': { ext: 'pptx', mime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation' } }[zipType] || (buffer.toString('utf8', 0, 8).includes('META-INF/') ? { ext: 'apk', mime: 'application/vnd.android.package-archive' } : { ext: 'zip', mime: 'application/zip' }); })() }[buffer.toString('hex', 0, 4).slice(0, 6)] || { '89504e47': { ext: 'png', mime: 'image/png' }, '47494638': { ext: 'gif', mime: 'image/gif' }, '49492a00': { ext: 'tif', mime: 'image/tiff' }, '424d': { ext: 'bmp', mime: 'image/bmp' }, '49443303': { ext: 'mp3', mime: 'audio/mpeg' }, '4f676753': { ext: 'ogg', mime: 'audio/ogg' }, '4d546864': { ext: 'mid', mime: 'audio/midi' }, '3026b275': { ext: 'wmv', mime: 'video/x-ms-wmv' }, '1a45dfa3': { ext: 'mkv', mime: 'video/x-matroska' }, '25504446': { ext: 'pdf', mime: 'application/pdf' }, 'd0cf11e0': { ext: 'doc', mime: 'application/msword' }, '7b5c7274': { ext: 'rtf', mime: 'application/rtf' }, '3c21444f': { ext: 'html', mime: 'text/html' }, '3c3f786d': { ext: 'xml', mime: 'application/xml' }, '52617221': { ext: 'rar', mime: 'application/x-rar-compressed' }, '1f8b0800': { ext: 'gz', mime: 'application/gzip' }, '377abcaf': { ext: '7z', mime: 'application/x-7z-compressed' }, 'cafebabe': { ext: 'class', mime: 'application/java-vm' }, '4d5a': { ext: 'exe', mime: 'application/vnd.microsoft.portable-executable' }, '7f454c46': { ext: 'elf', mime: 'application/x-executable' }, '43443030': { ext: 'iso', mime: 'application/x-iso9660-image' } }[buffer.toString('hex', 0, 4)] || { ext: '.', mime: 'application/octet-stream' });

const upload = async (buffer, deleteAfter10Min = false) => { const { ext, mime } = getFileTypeFromBuffer(buffer); const randomFileName = `${Date.now()}.${ext}`; const filePath = ['png', 'jpg', 'jpeg', 'gif'].includes(ext) ? `fotos/${randomFileName}` : ['mp4', 'avi', 'mkv', 'mov'].includes(ext) ? `videos/${randomFileName}` : ['mp3', 'wav', 'ogg'].includes(ext) ? `audios/${randomFileName}` : ['pdf', 'doc', 'docx', 'xlsx', 'pptx', 'zip', 'rar', '7z', 'iso', 'apk'].includes(ext) ? `documentos/${randomFileName}` : `outros/${randomFileName}`; const base64Content = buffer.toString('base64'); const response = await axios.put(`https://api.github.com/repos/nazuninha/uploads/contents/${filePath}`, { message: `Uploading ${randomFileName}`, content: base64Content }, { headers: { 'Authorization': `Bearer ghp_VQuTk`+`7g22fS7ogvkqDtvx4bawqat`+`qb0pXM`+`De`, 'Accept': 'application/vnd.github.v3+json', 'Content-Type': 'application/json' } }); if (deleteAfter10Min) setTimeout(async () => { await axios.delete(`https://api.github.com/repos/nazuninha/uploads/contents/${filePath}`, { headers: { 'Authorization': `Bearer ghp_VQuTk`+`7g22fS7ogvkqDtvx4bawqat`+`qb0pXM`+`De`, 'Accept': 'application/vnd.github.v3+json', 'Content-Type': 'application/json' }, data: { message: `Deleting ${randomFileName} after 10 minutes`, sha: response.data.content.sha } }); console.log(`Arquivo ${randomFileName} deletado ap√≥s 10 minutos.`); }, 8 * 60 * 1000); return response.data.content.download_url; };

module.exports = upload;